[tox]
envlist = py38, py39, flake8, docs
skipsdist = true
minversion = 3.24
isolated_build = True
requires =
    keyrings.google-artifactregistry-auth


[testenv:{docs,doctests}]
description = invoke sphinx-build to build the docs/run doctests
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
deps =
    sphinx
    # sphinx_rtd_theme
    # any docs/requirements.txt for/shared with Read The Docs?
commands =
    sphinx-build -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}


[testenv:docs]
allowlist_externals = make
basepython = python
changedir = docs
deps =
    sphinx
commands =
    make clean
    make html

[testenv:flake8]
basepython = python
deps = flake8
skip_install = True
commands = flake8 src/ tests

[testenv]
usedevelop = True
description = invoke pytest to run automated tests
setenv =
    PYTHONPATH = {toxinidir}/src
    TOXINIDIR = {toxinidir}
    MYPYPATH = {toxinidir}/src
passenv =
    HOME
deps =
    -r{toxinidir}/requirements_dev.txt
commands =
    py.test {posargs}
    pylint {{cookiecutter.package_name}} -ry -f parseable
    radon cc --show-complexity src/
    xenon --max-absolute C --max-modules B --max-average A src/
    mypy --package {{cookiecutter.package_name}} --ignore-missing-imports
extras =
    all
    testing

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/stable/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
basepython = python3.9
deps =
    setuptools
    setuptools-scm
    wheel
    build: build[virtualenv]
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
basepython = python3.9
passenv =
    PYPI_REPO
    GOOGLE_APPLICATION_CREDENTIALS
    HOME
deps =
    twine
commands =
    python3.9 -m twine check dist/*
    python3.9 -m twine upload --skip-existing --verbose --non-interactive {posargs:--repository-url {env:PYPI_REPO:https://europe-west3-python.pkg.dev/it-prod-gen-advana-000040/pypi/}} dist/*
