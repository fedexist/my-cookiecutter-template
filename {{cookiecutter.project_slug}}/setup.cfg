# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = {{cookiecutter.project_slug}}
description = {{cookiecutter.project_short_description}}
author = {{cookiecutter.full_name}}
author_email = {{cookiecutter.email}}
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://gitlab.advancedanalytics.generali.com/aa-generali-italia/{{ cookiecutter.project_slug }}
project_urls =
    Documentation = https://pyscaffold.org/
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
        'Development Status :: 2 - Pre-Alpha',
        'Intended Audience :: Developers',
        'Natural Language :: English',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
keywords = {{ cookiecutter.package_name }}

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires =
    pyscaffold>=3.2a0,<3.3a0
    pytest-runner

install_requires =

    {%- if cookiecutter.command_line_interface|lower == 'click' %}
    Click>=7.0
    {%- endif %}

    {%- if cookiecutter.use_freedaa == 'y' %}
    freedaa=={{ cookiecutter.freedaa_version }}
    {%- endif %}
# Add here dependencies of your project (semicolon/line-separated), e.g.
# install_requires = numpy; scipy
# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*
python_requires = >= 3.8


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install my-python-project[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = my_python_project.module:function
# For example:
# console_scripts =
#     fibonacci = my_python_project.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension
{%- if 'no' not in cookiecutter.command_line_interface|lower %}
console_scripts =
    {{ cookiecutter.package_name }} = {{ cookiecutter.package_name }}.cli:main
{%- endif %}

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True


[aliases]
dists = bdist_wheel
# Define setup.py command aliases here
test = pytest

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov src/ --cov-report term-missing --cov-report xml --cov-report html
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 120
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pylint.MASTER]
ignore = CVS
max-line-length = 120
limit-inference-results = 100
persistent = yes
enable = c-extension-no-member
max-nested-blocks = 5
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = no
min-similarity-lines = 4
argument-naming-style = snake_case
fail-under = 8.5
good-names = i,
	j,
	k,
	ex,
	Run,
	_,
	df,
	dist_name

[pylint.'MESSAGE CONTROL']
disable =
	missing-module-docstring,
	trailing-comma-tuple,
	import-error,
	logging-format-interpolation,
	logging-fstring-interpolation


[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.2.3
package = {{cookiecutter.package_name}}
extensions =
    tox

[bumpversion]
current_version = {{ cookiecutter.version }}
commit = True
tag = True
tag_name = v{new_version}

[bumpversion:file:src/{{ cookiecutter.package_name }}/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'
